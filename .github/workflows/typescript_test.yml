name: Run Frontend Tests

on:
  workflow_call:
    secrets:
      OPENAI_API_KEY:
        required: true
      STORE_API_KEY:
        required: true
    inputs:
      tests_folder:
        description: "(Optional) Tests to run"
        required: false
        type: string
        default: "tests"
      ref:
        description: "(Optional) ref to checkout"
        required: false
        type: string
  workflow_dispatch:
    inputs:
      tests_folder:
        description: "(Optional) Tests to run"
        required: false
        type: string
        default: "tests"

env:
  NODE_VERSION: "21"
  PYTHON_VERSION: "3.12"
  PLAYWRIGHT_BROWSERS_PATH: "ms-playwright"

jobs:
  determine-test-suite:
    runs-on: ubuntu-latest
    outputs:
      suites: ${{ steps.set-suites.outputs.suites }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref || github.ref }}
          fetch-depth: 0

      - id: set-suites
        run: |
          SUITES="[]"
          CHANGES=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }})

          if echo "$CHANGES" | grep -q "src/backend/base/langflow/initial_setup/\|src/backend/base/langflow/\|src/frontend/workspace/"; then
            SUITES=$(echo $SUITES | jq '. += ["starter-projects"]')
          fi
          if echo "$CHANGES" | grep -q "src/frontend/src/components/"; then
            SUITES=$(echo $SUITES | jq '. += ["components"]')
          fi
          if echo "$CHANGES" | grep -q "src/frontend/workspace/"; then
            SUITES=$(echo $SUITES | jq '. += ["workspace"]')
          fi
          if echo "$CHANGES" | grep -q "src/frontend/api/"; then
            SUITES=$(echo $SUITES | jq '. += ["api"]')
          fi
          if echo "$CHANGES" | grep -q "src/frontend/database/"; then
            SUITES=$(echo $SUITES | jq '. += ["database"]')
          fi

          # If no specific changes detected, run all suites
          if [ "$SUITES" == "[]" ]; then
            SUITES='["starter-projects", "components", "workspace", "api", "database"]'
          fi

          echo "suites=$SUITES" >> $GITHUB_OUTPUT

  setup-and-test:
    needs: determine-test-suite
    name: Playwright Tests - ${{ matrix.suite }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        suite: ${{ fromJson(needs.determine-test-suite.outputs.suites) }}

    env:
      OPENAI_API_KEY: ${{ inputs.openai_api_key || secrets.OPENAI_API_KEY }}
      STORE_API_KEY: ${{ inputs.store_api_key || secrets.STORE_API_KEY }}
      SEARCH_API_KEY: "${{ secrets.SEARCH_API_KEY }}"
      ASTRA_DB_APPLICATION_TOKEN: "${{ secrets.ASTRA_DB_APPLICATION_TOKEN }}"
      ASTRA_DB_API_ENDPOINT: "${{ secrets.ASTRA_DB_API_ENDPOINT }}"

    steps:
      # [Previous setup steps remain the same until test execution]

      - name: Run Playwright Tests
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 12
          max_attempts: 2
          command: |
            cd src/frontend
            npx playwright test ${{ inputs.tests_folder }} --grep "@${{ matrix.suite }}" --trace on --workers 2

      - name: Upload blob report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: blob-report-${{ matrix.suite }}
          path: src/frontend/blob-report
          retention-days: 1

  merge-reports:
    # We need to repeat the condition at every step
    # https://github.com/actions/runner/issues/662
    needs: setup-and-test
    runs-on: ubuntu-latest
    if: always()
    env:
      EXIT_CODE: ${{!contains(needs.setup-and-test.result, 'failure') && !contains(needs.setup-and-test.result, 'cancelled') && '0' || '1'}}
    steps:
      - name: "Should Merge Reports"
        # If the CI was successful, we don't need to merge the reports
        # so we can skip all the steps below
        id: should_merge_reports
        run: |
          if [ "$EXIT_CODE" == "0" ]; then
            echo "should_merge_reports=false" >> $GITHUB_OUTPUT
          else
            echo "should_merge_reports=true" >> $GITHUB_OUTPUT
          fi
      - name: Checkout code
        if: ${{ steps.should_merge_reports.outputs.should_merge_reports == 'true' }}
        uses: actions/checkout@v4

      - name: Setup Node.js

        if: ${{ steps.should_merge_reports.outputs.should_merge_reports == 'true' }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Download blob reports from GitHub Actions Artifacts

        if: ${{ steps.should_merge_reports.outputs.should_merge_reports == 'true' }}
        uses: actions/download-artifact@v4
        with:
          path: all-blob-reports
          pattern: blob-report-*
          merge-multiple: true

      - name: Merge into HTML Report

        if: ${{ steps.should_merge_reports.outputs.should_merge_reports == 'true' }}
        run: |
          npx playwright merge-reports --reporter html ./all-blob-reports

      - name: Upload HTML report

        if: ${{ steps.should_merge_reports.outputs.should_merge_reports == 'true' }}
        uses: actions/upload-artifact@v4
        with:
          name: html-report--attempt-${{ github.run_attempt }}
          path: playwright-report
          retention-days: 14
